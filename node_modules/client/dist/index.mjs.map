{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["// packages/client/src/index.ts\r\n\r\n// Define a type for your custom message protocol (for TS)\r\nexport interface WebSocketMessage {\r\n    type: string;\r\n    timestamp?: number;\r\n    originalTimestamp?: number;\r\n    content?: string;\r\n    [key: string]: any; // Allow other properties\r\n}\r\n\r\n// Internal state and variables\r\nlet ws: WebSocket | null = null;\r\nlet currentUrl: string ;\r\nlet pingInterval:  number; // Use NodeJS.Timeout for clarity with setInterval\r\nconst eventListeners: { [key: string]: Function[] } = {}; // Simple custom event system\r\n\r\n// --- Internal Helper Functions ---\r\n\r\nfunction _dispatchEvent(eventName: string, detail?: any): void {\r\n    if (eventListeners[eventName]) {\r\n        eventListeners[eventName].forEach(callback => callback(detail));\r\n    }\r\n}\r\n\r\nfunction _handleIncomingMessage(message: string): void {\r\n    try {\r\n        const parsedMessage: WebSocketMessage = JSON.parse(message);\r\n        if (parsedMessage.type === 'pong') {\r\n            const latency = Date.now() - (parsedMessage.originalTimestamp || 0);\r\n            _dispatchEvent('pong', { latency, ...parsedMessage });\r\n        } else {\r\n            _dispatchEvent('message', parsedMessage); // Generic message event\r\n            _dispatchEvent(parsedMessage.type, parsedMessage); // Specific type event\r\n        }\r\n    } catch (e) {\r\n        console.error(\"WebSocketClient: Failed to parse incoming message:\", message, e);\r\n        _dispatchEvent('error', new Error(`Failed to parse message: ${message}`));\r\n    }\r\n}\r\n\r\nfunction _sendRaw(message: string): void {\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n        ws.send(message);\r\n    } else {\r\n        console.warn(\"WebSocketClient: WebSocket not open, cannot send raw message.\");\r\n        _dispatchEvent('error', new Error('WebSocket not open'));\r\n    }\r\n}\r\n\r\nfunction _sendPing(): void {\r\n    _sendRaw(JSON.stringify({ type: \"ping\", timestamp: Date.now() }));\r\n}\r\n\r\nfunction _startPingInterval(): void {\r\n    if (pingInterval) clearInterval(pingInterval);\r\n    pingInterval = setInterval(_sendPing, 5000); // Ping every 5 seconds\r\n}\r\n\r\nfunction _stopPingInterval(): void {\r\n    if (pingInterval) {\r\n        clearInterval(pingInterval);\r\n        pingInterval = 0;\r\n    }\r\n}\r\n\r\nfunction _reconnect(): void {\r\n    if (currentUrl) {\r\n        console.log(`WebSocketClient: Attempting to reconnect to ${currentUrl}...`);\r\n        _dispatchEvent('reconnecting', { url: currentUrl });\r\n        setTimeout(() => connect(currentUrl), 3000); // Try again in 3 seconds\r\n    }\r\n}\r\n\r\n// --- Public API Functions ---\r\n\r\n/**\r\n * Connects to the WebSocket server.\r\n * @param {string} url - The WebSocket server URL (ws:// or wss://)\r\n */\r\nexport function connect(url: string): void {\r\n    if (ws && (ws.readyState === WebSocket.OPEN || ws.readyState === WebSocket.CONNECTING)) {\r\n        console.log(\"WebSocketClient: WebSocket already connected or connecting.\");\r\n        return;\r\n    }\r\n\r\n    currentUrl = url;\r\n    ws = new WebSocket(url);\r\n\r\n    ws.onopen = () => {\r\n        console.log(\"WebSocketClient: Connection opened.\");\r\n        _startPingInterval();\r\n        _dispatchEvent('connected', { url });\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n        _handleIncomingMessage(event.data.toString());\r\n    };\r\n\r\n    ws.onclose = (event) => {\r\n        console.log(\"WebSocketClient: Connection closed.\", event);\r\n        _stopPingInterval();\r\n        _dispatchEvent('disconnected', { code: event.code, reason: event.reason });\r\n        _reconnect();\r\n    };\r\n\r\n    ws.onerror = (event) => {\r\n        console.error(\"WebSocketClient: Error:\", event);\r\n        _dispatchEvent('error', event);\r\n        if (ws && ws.readyState === WebSocket.CLOSED) {\r\n            _reconnect(); // Attempt reconnect on error if already closed\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Sends a structured message to the WebSocket server.\r\n * Messages are automatically JSON.stringify'd.\r\n * @param {WebSocketMessage} messageData - The data object to send. Must have a 'type' property.\r\n */\r\nexport function send(messageData: WebSocketMessage): void {\r\n    if (typeof messageData !== 'object' || messageData === null || typeof messageData.type === 'undefined') {\r\n        console.error(\"WebSocketClient: Message must be an object with a 'type' property.\");\r\n        _dispatchEvent('error', new Error('Invalid message format for send'));\r\n        return;\r\n    }\r\n    _sendRaw(JSON.stringify(messageData));\r\n}\r\n\r\n/**\r\n * Disconnects from the WebSocket server.\r\n */\r\nexport function disconnect(): void {\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n        ws.close(1000, 'Client explicitly disconnected');\r\n        console.log('WebSocketClient: Explicitly closing connection.');\r\n        _stopPingInterval();\r\n        ws = null;\r\n        currentUrl = \"\";\r\n        _dispatchEvent('disconnected', { code: 1000, reason: 'Explicitly disconnected' });\r\n    } else {\r\n        console.warn(\"WebSocketClient: WebSocket is not open to disconnect.\");\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the WebSocket is currently connected.\r\n * @returns {boolean} True if connected, false otherwise.\r\n */\r\nexport function isConnected(): boolean {\r\n    return ws !== null && ws.readyState === WebSocket.OPEN;\r\n}\r\n\r\n/**\r\n * Subscribes a callback to a specific WebSocket event.\r\n * Events: 'connected', 'disconnected', 'reconnecting', 'error', 'message', 'pong',\r\n * and any custom message.type from the server (e.g., 'chatMessage').\r\n * @param {string} eventName - The name of the event to subscribe to.\r\n * @param {Function} callback - The callback function to execute when the event fires.\r\n */\r\nexport function on(eventName: string, callback: Function): void {\r\n    if (!eventListeners[eventName]) {\r\n        eventListeners[eventName] = [];\r\n    }\r\n    eventListeners[eventName].push(callback);\r\n}\r\n\r\n/**\r\n * Unsubscribes a callback from a specific WebSocket event.\r\n * @param {string} eventName - The name of the event to unsubscribe from.\r\n * @param {Function} callback - The callback function to remove.\r\n */\r\nexport function off(eventName: string, callback: Function): void {\r\n    if (eventListeners[eventName]) {\r\n        eventListeners[eventName] = eventListeners[eventName].filter(cb => cb !== callback);\r\n    }\r\n}"],"names":[],"mappings":"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"}