let e,o,n=null;const t={};function c(e,o){t[e]&&t[e].forEach(e=>e(o))}function r(e){n&&n.readyState===WebSocket.OPEN?n.send(e):(console.warn("WebSocketClient: WebSocket not open, cannot send raw message."),c("error",new Error("WebSocket not open")))}function i(){r(JSON.stringify({type:"ping",timestamp:Date.now()}))}function l(){o&&(clearInterval(o),o=0)}function s(){e&&(console.log(`WebSocketClient: Attempting to reconnect to ${e}...`),c("reconnecting",{url:e}),setTimeout(()=>a(e),3e3))}function a(t){!n||n.readyState!==WebSocket.OPEN&&n.readyState!==WebSocket.CONNECTING?(e=t,n=new WebSocket(t),n.onopen=()=>{console.log("WebSocketClient: Connection opened."),o&&clearInterval(o),o=setInterval(i,5e3),c("connected",{url:t})},n.onmessage=e=>{!function(e){try{const o=JSON.parse(e);"pong"===o.type?c("pong",{latency:Date.now()-(o.originalTimestamp||0),...o}):(c("message",o),c(o.type,o))}catch(o){console.error("WebSocketClient: Failed to parse incoming message:",e,o),c("error",new Error(`Failed to parse message: ${e}`))}}(e.data.toString())},n.onclose=e=>{console.log("WebSocketClient: Connection closed.",e),l(),c("disconnected",{code:e.code,reason:e.reason}),s()},n.onerror=e=>{console.error("WebSocketClient: Error:",e),c("error",e),n&&n.readyState===WebSocket.CLOSED&&s()}):console.log("WebSocketClient: WebSocket already connected or connecting.")}function d(e){if("object"!=typeof e||null===e||void 0===e.type)return console.error("WebSocketClient: Message must be an object with a 'type' property."),void c("error",new Error("Invalid message format for send"));r(JSON.stringify(e))}function S(){n&&n.readyState===WebSocket.OPEN?(n.close(1e3,"Client explicitly disconnected"),console.log("WebSocketClient: Explicitly closing connection."),l(),n=null,e="",c("disconnected",{code:1e3,reason:"Explicitly disconnected"})):console.warn("WebSocketClient: WebSocket is not open to disconnect.")}function p(){return null!==n&&n.readyState===WebSocket.OPEN}function b(e,o){t[e]||(t[e]=[]),t[e].push(o)}function g(e,o){t[e]&&(t[e]=t[e].filter(e=>e!==o))}export{a as connect,S as disconnect,p as isConnected,g as off,b as on,d as send};
//# sourceMappingURL=index.min.mjs.map
